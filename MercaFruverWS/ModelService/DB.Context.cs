//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ModelService
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MercaFruverSVEntities : DbContext
    {
        public MercaFruverSVEntities()
            : base("name=MercaFruverSVEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Category { get; set; }
        public virtual DbSet<Product> Product { get; set; }
        public virtual DbSet<Purchase> Purchase { get; set; }
        public virtual DbSet<Supplier> Supplier { get; set; }
        public virtual DbSet<Client> Client { get; set; }
        public virtual DbSet<Concept_Sale> Concept_Sale { get; set; }
        public virtual DbSet<Sale> Sale { get; set; }
        public virtual DbSet<Vendor> Vendor { get; set; }
        public virtual DbSet<cstate> cstate { get; set; }
        public virtual DbSet<Document_Type> Document_Type { get; set; }
        public virtual DbSet<vw_Product> vw_Product { get; set; }
        public virtual DbSet<vw_Purchase> vw_Purchase { get; set; }
        public virtual DbSet<vw_Supplier> vw_Supplier { get; set; }
        public virtual DbSet<vw_Sale> vw_Sale { get; set; }
        public virtual DbSet<vw_Concept> vw_Concept { get; set; }
        public virtual DbSet<vw_Client> vw_Client { get; set; }
        public virtual DbSet<vw_Vendor> vw_Vendor { get; set; }
    
        public virtual int sp_category_delete(Nullable<int> cId)
        {
            var cIdParameter = cId.HasValue ?
                new ObjectParameter("cId", cId) :
                new ObjectParameter("cId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_category_delete", cIdParameter);
        }
    
        public virtual ObjectResult<Category> sp_category_getById(Nullable<int> cId)
        {
            var cIdParameter = cId.HasValue ?
                new ObjectParameter("cId", cId) :
                new ObjectParameter("cId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Category>("sp_category_getById", cIdParameter);
        }
    
        public virtual ObjectResult<Category> sp_category_getById(Nullable<int> cId, MergeOption mergeOption)
        {
            var cIdParameter = cId.HasValue ?
                new ObjectParameter("cId", cId) :
                new ObjectParameter("cId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Category>("sp_category_getById", mergeOption, cIdParameter);
        }
    
        public virtual int sp_category_insert(string cName, string cDescription)
        {
            var cNameParameter = cName != null ?
                new ObjectParameter("cName", cName) :
                new ObjectParameter("cName", typeof(string));
    
            var cDescriptionParameter = cDescription != null ?
                new ObjectParameter("cDescription", cDescription) :
                new ObjectParameter("cDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_category_insert", cNameParameter, cDescriptionParameter);
        }
    
        public virtual ObjectResult<Category> sp_category_list()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Category>("sp_category_list");
        }
    
        public virtual ObjectResult<Category> sp_category_list(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Category>("sp_category_list", mergeOption);
        }
    
        public virtual int sp_category_update(Nullable<int> cId, string cName, string cDescription)
        {
            var cIdParameter = cId.HasValue ?
                new ObjectParameter("cId", cId) :
                new ObjectParameter("cId", typeof(int));
    
            var cNameParameter = cName != null ?
                new ObjectParameter("cName", cName) :
                new ObjectParameter("cName", typeof(string));
    
            var cDescriptionParameter = cDescription != null ?
                new ObjectParameter("cDescription", cDescription) :
                new ObjectParameter("cDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_category_update", cIdParameter, cNameParameter, cDescriptionParameter);
        }
    
        public virtual int sp_product_delete(Nullable<int> pCode)
        {
            var pCodeParameter = pCode.HasValue ?
                new ObjectParameter("pCode", pCode) :
                new ObjectParameter("pCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_product_delete", pCodeParameter);
        }
    
        public virtual int sp_product_deleteSoft(Nullable<int> pCode)
        {
            var pCodeParameter = pCode.HasValue ?
                new ObjectParameter("pCode", pCode) :
                new ObjectParameter("pCode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_product_deleteSoft", pCodeParameter);
        }
    
        public virtual ObjectResult<Product> sp_product_getByCode(Nullable<int> code)
        {
            var codeParameter = code.HasValue ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("sp_product_getByCode", codeParameter);
        }
    
        public virtual ObjectResult<Product> sp_product_getByCode(Nullable<int> code, MergeOption mergeOption)
        {
            var codeParameter = code.HasValue ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("sp_product_getByCode", mergeOption, codeParameter);
        }
    
        public virtual ObjectResult<vw_Product> sp_product_getList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Product>("sp_product_getList");
        }
    
        public virtual ObjectResult<vw_Product> sp_product_getList(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Product>("sp_product_getList", mergeOption);
        }
    
        public virtual int sp_product_insert(Nullable<int> pCategoryId, Nullable<int> pCode, string pName, Nullable<decimal> pSellingPrice, Nullable<int> pStock, Nullable<decimal> pCost)
        {
            var pCategoryIdParameter = pCategoryId.HasValue ?
                new ObjectParameter("pCategoryId", pCategoryId) :
                new ObjectParameter("pCategoryId", typeof(int));
    
            var pCodeParameter = pCode.HasValue ?
                new ObjectParameter("pCode", pCode) :
                new ObjectParameter("pCode", typeof(int));
    
            var pNameParameter = pName != null ?
                new ObjectParameter("pName", pName) :
                new ObjectParameter("pName", typeof(string));
    
            var pSellingPriceParameter = pSellingPrice.HasValue ?
                new ObjectParameter("pSellingPrice", pSellingPrice) :
                new ObjectParameter("pSellingPrice", typeof(decimal));
    
            var pStockParameter = pStock.HasValue ?
                new ObjectParameter("pStock", pStock) :
                new ObjectParameter("pStock", typeof(int));
    
            var pCostParameter = pCost.HasValue ?
                new ObjectParameter("pCost", pCost) :
                new ObjectParameter("pCost", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_product_insert", pCategoryIdParameter, pCodeParameter, pNameParameter, pSellingPriceParameter, pStockParameter, pCostParameter);
        }
    
        public virtual int sp_product_update(Nullable<int> pCategoryId, Nullable<int> pCode, string pName, Nullable<decimal> pSellingPrice, Nullable<int> pStock, Nullable<decimal> pCost)
        {
            var pCategoryIdParameter = pCategoryId.HasValue ?
                new ObjectParameter("pCategoryId", pCategoryId) :
                new ObjectParameter("pCategoryId", typeof(int));
    
            var pCodeParameter = pCode.HasValue ?
                new ObjectParameter("pCode", pCode) :
                new ObjectParameter("pCode", typeof(int));
    
            var pNameParameter = pName != null ?
                new ObjectParameter("pName", pName) :
                new ObjectParameter("pName", typeof(string));
    
            var pSellingPriceParameter = pSellingPrice.HasValue ?
                new ObjectParameter("pSellingPrice", pSellingPrice) :
                new ObjectParameter("pSellingPrice", typeof(decimal));
    
            var pStockParameter = pStock.HasValue ?
                new ObjectParameter("pStock", pStock) :
                new ObjectParameter("pStock", typeof(int));
    
            var pCostParameter = pCost.HasValue ?
                new ObjectParameter("pCost", pCost) :
                new ObjectParameter("pCost", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_product_update", pCategoryIdParameter, pCodeParameter, pNameParameter, pSellingPriceParameter, pStockParameter, pCostParameter);
        }
    
        public virtual int sp_purchase_delete(Nullable<int> puId)
        {
            var puIdParameter = puId.HasValue ?
                new ObjectParameter("puId", puId) :
                new ObjectParameter("puId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_purchase_delete", puIdParameter);
        }
    
        public virtual int sp_purchase_deleteSoft(Nullable<int> puId)
        {
            var puIdParameter = puId.HasValue ?
                new ObjectParameter("puId", puId) :
                new ObjectParameter("puId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_purchase_deleteSoft", puIdParameter);
        }
    
        public virtual ObjectResult<Purchase> sp_purchase_getById(Nullable<int> puId)
        {
            var puIdParameter = puId.HasValue ?
                new ObjectParameter("puId", puId) :
                new ObjectParameter("puId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Purchase>("sp_purchase_getById", puIdParameter);
        }
    
        public virtual ObjectResult<Purchase> sp_purchase_getById(Nullable<int> puId, MergeOption mergeOption)
        {
            var puIdParameter = puId.HasValue ?
                new ObjectParameter("puId", puId) :
                new ObjectParameter("puId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Purchase>("sp_purchase_getById", mergeOption, puIdParameter);
        }
    
        public virtual int sp_purchase_insert(Nullable<int> puSupplierId, Nullable<int> puProductId, Nullable<int> puQuantity, Nullable<decimal> puUnitCost)
        {
            var puSupplierIdParameter = puSupplierId.HasValue ?
                new ObjectParameter("puSupplierId", puSupplierId) :
                new ObjectParameter("puSupplierId", typeof(int));
    
            var puProductIdParameter = puProductId.HasValue ?
                new ObjectParameter("puProductId", puProductId) :
                new ObjectParameter("puProductId", typeof(int));
    
            var puQuantityParameter = puQuantity.HasValue ?
                new ObjectParameter("puQuantity", puQuantity) :
                new ObjectParameter("puQuantity", typeof(int));
    
            var puUnitCostParameter = puUnitCost.HasValue ?
                new ObjectParameter("puUnitCost", puUnitCost) :
                new ObjectParameter("puUnitCost", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_purchase_insert", puSupplierIdParameter, puProductIdParameter, puQuantityParameter, puUnitCostParameter);
        }
    
        public virtual int sp_purchase_update(Nullable<int> puId, Nullable<int> puSupplierId, Nullable<int> puProductId, Nullable<int> puQuantity, Nullable<decimal> puUnitCost)
        {
            var puIdParameter = puId.HasValue ?
                new ObjectParameter("puId", puId) :
                new ObjectParameter("puId", typeof(int));
    
            var puSupplierIdParameter = puSupplierId.HasValue ?
                new ObjectParameter("puSupplierId", puSupplierId) :
                new ObjectParameter("puSupplierId", typeof(int));
    
            var puProductIdParameter = puProductId.HasValue ?
                new ObjectParameter("puProductId", puProductId) :
                new ObjectParameter("puProductId", typeof(int));
    
            var puQuantityParameter = puQuantity.HasValue ?
                new ObjectParameter("puQuantity", puQuantity) :
                new ObjectParameter("puQuantity", typeof(int));
    
            var puUnitCostParameter = puUnitCost.HasValue ?
                new ObjectParameter("puUnitCost", puUnitCost) :
                new ObjectParameter("puUnitCost", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_purchase_update", puIdParameter, puSupplierIdParameter, puProductIdParameter, puQuantityParameter, puUnitCostParameter);
        }
    
        public virtual int sp_supplier_delete(Nullable<int> sNit)
        {
            var sNitParameter = sNit.HasValue ?
                new ObjectParameter("sNit", sNit) :
                new ObjectParameter("sNit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_supplier_delete", sNitParameter);
        }
    
        public virtual int sp_supplier_deleteSoft(Nullable<int> sNit)
        {
            var sNitParameter = sNit.HasValue ?
                new ObjectParameter("sNit", sNit) :
                new ObjectParameter("sNit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_supplier_deleteSoft", sNitParameter);
        }
    
        public virtual ObjectResult<Supplier> sp_supplier_getById(Nullable<int> sNit)
        {
            var sNitParameter = sNit.HasValue ?
                new ObjectParameter("sNit", sNit) :
                new ObjectParameter("sNit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Supplier>("sp_supplier_getById", sNitParameter);
        }
    
        public virtual ObjectResult<Supplier> sp_supplier_getById(Nullable<int> sNit, MergeOption mergeOption)
        {
            var sNitParameter = sNit.HasValue ?
                new ObjectParameter("sNit", sNit) :
                new ObjectParameter("sNit", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Supplier>("sp_supplier_getById", mergeOption, sNitParameter);
        }
    
        public virtual int sp_supplier_insert(Nullable<int> sNit, string sName, string sAddress, string sPhone, string sCity, string sWeb)
        {
            var sNitParameter = sNit.HasValue ?
                new ObjectParameter("sNit", sNit) :
                new ObjectParameter("sNit", typeof(int));
    
            var sNameParameter = sName != null ?
                new ObjectParameter("sName", sName) :
                new ObjectParameter("sName", typeof(string));
    
            var sAddressParameter = sAddress != null ?
                new ObjectParameter("sAddress", sAddress) :
                new ObjectParameter("sAddress", typeof(string));
    
            var sPhoneParameter = sPhone != null ?
                new ObjectParameter("sPhone", sPhone) :
                new ObjectParameter("sPhone", typeof(string));
    
            var sCityParameter = sCity != null ?
                new ObjectParameter("sCity", sCity) :
                new ObjectParameter("sCity", typeof(string));
    
            var sWebParameter = sWeb != null ?
                new ObjectParameter("sWeb", sWeb) :
                new ObjectParameter("sWeb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_supplier_insert", sNitParameter, sNameParameter, sAddressParameter, sPhoneParameter, sCityParameter, sWebParameter);
        }
    
        public virtual int sp_supplier_update(Nullable<int> sNit, string sName, string sAddress, string sPhone, string sCity, string sWeb)
        {
            var sNitParameter = sNit.HasValue ?
                new ObjectParameter("sNit", sNit) :
                new ObjectParameter("sNit", typeof(int));
    
            var sNameParameter = sName != null ?
                new ObjectParameter("sName", sName) :
                new ObjectParameter("sName", typeof(string));
    
            var sAddressParameter = sAddress != null ?
                new ObjectParameter("sAddress", sAddress) :
                new ObjectParameter("sAddress", typeof(string));
    
            var sPhoneParameter = sPhone != null ?
                new ObjectParameter("sPhone", sPhone) :
                new ObjectParameter("sPhone", typeof(string));
    
            var sCityParameter = sCity != null ?
                new ObjectParameter("sCity", sCity) :
                new ObjectParameter("sCity", typeof(string));
    
            var sWebParameter = sWeb != null ?
                new ObjectParameter("sWeb", sWeb) :
                new ObjectParameter("sWeb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_supplier_update", sNitParameter, sNameParameter, sAddressParameter, sPhoneParameter, sCityParameter, sWebParameter);
        }
    
        public virtual int sp_client_delete(string clDocumentNumber)
        {
            var clDocumentNumberParameter = clDocumentNumber != null ?
                new ObjectParameter("clDocumentNumber", clDocumentNumber) :
                new ObjectParameter("clDocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_client_delete", clDocumentNumberParameter);
        }
    
        public virtual int sp_client_deleteSoft(string cDocumentNumber)
        {
            var cDocumentNumberParameter = cDocumentNumber != null ?
                new ObjectParameter("cDocumentNumber", cDocumentNumber) :
                new ObjectParameter("cDocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_client_deleteSoft", cDocumentNumberParameter);
        }
    
        public virtual ObjectResult<Client> sp_client_getByDocument(string clDocumentNumber)
        {
            var clDocumentNumberParameter = clDocumentNumber != null ?
                new ObjectParameter("clDocumentNumber", clDocumentNumber) :
                new ObjectParameter("clDocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Client>("sp_client_getByDocument", clDocumentNumberParameter);
        }
    
        public virtual ObjectResult<Client> sp_client_getByDocument(string clDocumentNumber, MergeOption mergeOption)
        {
            var clDocumentNumberParameter = clDocumentNumber != null ?
                new ObjectParameter("clDocumentNumber", clDocumentNumber) :
                new ObjectParameter("clDocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Client>("sp_client_getByDocument", mergeOption, clDocumentNumberParameter);
        }
    
        public virtual int sp_client_insert(Nullable<int> clDocumentTypeId, string clDocumentNumber, string clName, string clAddress, string clEmail, string clPhoneNumber)
        {
            var clDocumentTypeIdParameter = clDocumentTypeId.HasValue ?
                new ObjectParameter("clDocumentTypeId", clDocumentTypeId) :
                new ObjectParameter("clDocumentTypeId", typeof(int));
    
            var clDocumentNumberParameter = clDocumentNumber != null ?
                new ObjectParameter("clDocumentNumber", clDocumentNumber) :
                new ObjectParameter("clDocumentNumber", typeof(string));
    
            var clNameParameter = clName != null ?
                new ObjectParameter("clName", clName) :
                new ObjectParameter("clName", typeof(string));
    
            var clAddressParameter = clAddress != null ?
                new ObjectParameter("clAddress", clAddress) :
                new ObjectParameter("clAddress", typeof(string));
    
            var clEmailParameter = clEmail != null ?
                new ObjectParameter("clEmail", clEmail) :
                new ObjectParameter("clEmail", typeof(string));
    
            var clPhoneNumberParameter = clPhoneNumber != null ?
                new ObjectParameter("clPhoneNumber", clPhoneNumber) :
                new ObjectParameter("clPhoneNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_client_insert", clDocumentTypeIdParameter, clDocumentNumberParameter, clNameParameter, clAddressParameter, clEmailParameter, clPhoneNumberParameter);
        }
    
        public virtual int sp_client_update(string clDocumentNumber, string clName, string clAddress, string clEmail, string clPhoneNumber)
        {
            var clDocumentNumberParameter = clDocumentNumber != null ?
                new ObjectParameter("clDocumentNumber", clDocumentNumber) :
                new ObjectParameter("clDocumentNumber", typeof(string));
    
            var clNameParameter = clName != null ?
                new ObjectParameter("clName", clName) :
                new ObjectParameter("clName", typeof(string));
    
            var clAddressParameter = clAddress != null ?
                new ObjectParameter("clAddress", clAddress) :
                new ObjectParameter("clAddress", typeof(string));
    
            var clEmailParameter = clEmail != null ?
                new ObjectParameter("clEmail", clEmail) :
                new ObjectParameter("clEmail", typeof(string));
    
            var clPhoneNumberParameter = clPhoneNumber != null ?
                new ObjectParameter("clPhoneNumber", clPhoneNumber) :
                new ObjectParameter("clPhoneNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_client_update", clDocumentNumberParameter, clNameParameter, clAddressParameter, clEmailParameter, clPhoneNumberParameter);
        }
    
        public virtual int sp_concept_delete(Nullable<int> coId)
        {
            var coIdParameter = coId.HasValue ?
                new ObjectParameter("coId", coId) :
                new ObjectParameter("coId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_concept_delete", coIdParameter);
        }
    
        public virtual int sp_concept_deleteSoft(Nullable<int> coId)
        {
            var coIdParameter = coId.HasValue ?
                new ObjectParameter("coId", coId) :
                new ObjectParameter("coId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_concept_deleteSoft", coIdParameter);
        }
    
        public virtual ObjectResult<Concept_Sale> sp_concept_getById(Nullable<int> coId)
        {
            var coIdParameter = coId.HasValue ?
                new ObjectParameter("coId", coId) :
                new ObjectParameter("coId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Concept_Sale>("sp_concept_getById", coIdParameter);
        }
    
        public virtual ObjectResult<Concept_Sale> sp_concept_getById(Nullable<int> coId, MergeOption mergeOption)
        {
            var coIdParameter = coId.HasValue ?
                new ObjectParameter("coId", coId) :
                new ObjectParameter("coId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Concept_Sale>("sp_concept_getById", mergeOption, coIdParameter);
        }
    
        public virtual int sp_concept_insert(Nullable<int> coProductId, Nullable<int> coSaleId, Nullable<int> coQuantity, Nullable<decimal> coUnitPrice)
        {
            var coProductIdParameter = coProductId.HasValue ?
                new ObjectParameter("coProductId", coProductId) :
                new ObjectParameter("coProductId", typeof(int));
    
            var coSaleIdParameter = coSaleId.HasValue ?
                new ObjectParameter("coSaleId", coSaleId) :
                new ObjectParameter("coSaleId", typeof(int));
    
            var coQuantityParameter = coQuantity.HasValue ?
                new ObjectParameter("coQuantity", coQuantity) :
                new ObjectParameter("coQuantity", typeof(int));
    
            var coUnitPriceParameter = coUnitPrice.HasValue ?
                new ObjectParameter("coUnitPrice", coUnitPrice) :
                new ObjectParameter("coUnitPrice", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_concept_insert", coProductIdParameter, coSaleIdParameter, coQuantityParameter, coUnitPriceParameter);
        }
    
        public virtual int sp_concept_update(Nullable<int> coId, Nullable<int> coProductId, Nullable<int> coSaleId, Nullable<int> coQuantity, Nullable<decimal> coUnitPrice)
        {
            var coIdParameter = coId.HasValue ?
                new ObjectParameter("coId", coId) :
                new ObjectParameter("coId", typeof(int));
    
            var coProductIdParameter = coProductId.HasValue ?
                new ObjectParameter("coProductId", coProductId) :
                new ObjectParameter("coProductId", typeof(int));
    
            var coSaleIdParameter = coSaleId.HasValue ?
                new ObjectParameter("coSaleId", coSaleId) :
                new ObjectParameter("coSaleId", typeof(int));
    
            var coQuantityParameter = coQuantity.HasValue ?
                new ObjectParameter("coQuantity", coQuantity) :
                new ObjectParameter("coQuantity", typeof(int));
    
            var coUnitPriceParameter = coUnitPrice.HasValue ?
                new ObjectParameter("coUnitPrice", coUnitPrice) :
                new ObjectParameter("coUnitPrice", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_concept_update", coIdParameter, coProductIdParameter, coSaleIdParameter, coQuantityParameter, coUnitPriceParameter);
        }
    
        public virtual int sp_sale_delete(Nullable<int> saId)
        {
            var saIdParameter = saId.HasValue ?
                new ObjectParameter("saId", saId) :
                new ObjectParameter("saId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sale_delete", saIdParameter);
        }
    
        public virtual int sp_sale_deleteSoft(Nullable<int> saId)
        {
            var saIdParameter = saId.HasValue ?
                new ObjectParameter("saId", saId) :
                new ObjectParameter("saId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sale_deleteSoft", saIdParameter);
        }
    
        public virtual ObjectResult<Sale> sp_sale_getById(Nullable<int> saId)
        {
            var saIdParameter = saId.HasValue ?
                new ObjectParameter("saId", saId) :
                new ObjectParameter("saId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sale>("sp_sale_getById", saIdParameter);
        }
    
        public virtual ObjectResult<Sale> sp_sale_getById(Nullable<int> saId, MergeOption mergeOption)
        {
            var saIdParameter = saId.HasValue ?
                new ObjectParameter("saId", saId) :
                new ObjectParameter("saId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sale>("sp_sale_getById", mergeOption, saIdParameter);
        }
    
        public virtual int sp_sale_insert(Nullable<int> saClientId, Nullable<int> saVendorId, Nullable<decimal> saDisconunt, Nullable<decimal> saTotal)
        {
            var saClientIdParameter = saClientId.HasValue ?
                new ObjectParameter("saClientId", saClientId) :
                new ObjectParameter("saClientId", typeof(int));
    
            var saVendorIdParameter = saVendorId.HasValue ?
                new ObjectParameter("saVendorId", saVendorId) :
                new ObjectParameter("saVendorId", typeof(int));
    
            var saDisconuntParameter = saDisconunt.HasValue ?
                new ObjectParameter("saDisconunt", saDisconunt) :
                new ObjectParameter("saDisconunt", typeof(decimal));
    
            var saTotalParameter = saTotal.HasValue ?
                new ObjectParameter("saTotal", saTotal) :
                new ObjectParameter("saTotal", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sale_insert", saClientIdParameter, saVendorIdParameter, saDisconuntParameter, saTotalParameter);
        }
    
        public virtual int sp_sale_update(Nullable<int> saId, Nullable<int> saClientId, Nullable<int> saVendorId, Nullable<decimal> saDisconunt, Nullable<decimal> saTotal)
        {
            var saIdParameter = saId.HasValue ?
                new ObjectParameter("saId", saId) :
                new ObjectParameter("saId", typeof(int));
    
            var saClientIdParameter = saClientId.HasValue ?
                new ObjectParameter("saClientId", saClientId) :
                new ObjectParameter("saClientId", typeof(int));
    
            var saVendorIdParameter = saVendorId.HasValue ?
                new ObjectParameter("saVendorId", saVendorId) :
                new ObjectParameter("saVendorId", typeof(int));
    
            var saDisconuntParameter = saDisconunt.HasValue ?
                new ObjectParameter("saDisconunt", saDisconunt) :
                new ObjectParameter("saDisconunt", typeof(decimal));
    
            var saTotalParameter = saTotal.HasValue ?
                new ObjectParameter("saTotal", saTotal) :
                new ObjectParameter("saTotal", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_sale_update", saIdParameter, saClientIdParameter, saVendorIdParameter, saDisconuntParameter, saTotalParameter);
        }
    
        public virtual int sp_vendor_delete(string vDocumentNumber)
        {
            var vDocumentNumberParameter = vDocumentNumber != null ?
                new ObjectParameter("vDocumentNumber", vDocumentNumber) :
                new ObjectParameter("vDocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_vendor_delete", vDocumentNumberParameter);
        }
    
        public virtual int sp_vendor_deleteSoft(string vDocumentNumber)
        {
            var vDocumentNumberParameter = vDocumentNumber != null ?
                new ObjectParameter("vDocumentNumber", vDocumentNumber) :
                new ObjectParameter("vDocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_vendor_deleteSoft", vDocumentNumberParameter);
        }
    
        public virtual ObjectResult<Vendor> sp_vendor_getById(string vDocumentNumber)
        {
            var vDocumentNumberParameter = vDocumentNumber != null ?
                new ObjectParameter("vDocumentNumber", vDocumentNumber) :
                new ObjectParameter("vDocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vendor>("sp_vendor_getById", vDocumentNumberParameter);
        }
    
        public virtual ObjectResult<Vendor> sp_vendor_getById(string vDocumentNumber, MergeOption mergeOption)
        {
            var vDocumentNumberParameter = vDocumentNumber != null ?
                new ObjectParameter("vDocumentNumber", vDocumentNumber) :
                new ObjectParameter("vDocumentNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Vendor>("sp_vendor_getById", mergeOption, vDocumentNumberParameter);
        }
    
        public virtual int sp_vendor_insert(Nullable<int> vDocumentId, string vDocumentNumber, string vName, string vAddress, string vEmail, string vPhone)
        {
            var vDocumentIdParameter = vDocumentId.HasValue ?
                new ObjectParameter("vDocumentId", vDocumentId) :
                new ObjectParameter("vDocumentId", typeof(int));
    
            var vDocumentNumberParameter = vDocumentNumber != null ?
                new ObjectParameter("vDocumentNumber", vDocumentNumber) :
                new ObjectParameter("vDocumentNumber", typeof(string));
    
            var vNameParameter = vName != null ?
                new ObjectParameter("vName", vName) :
                new ObjectParameter("vName", typeof(string));
    
            var vAddressParameter = vAddress != null ?
                new ObjectParameter("vAddress", vAddress) :
                new ObjectParameter("vAddress", typeof(string));
    
            var vEmailParameter = vEmail != null ?
                new ObjectParameter("vEmail", vEmail) :
                new ObjectParameter("vEmail", typeof(string));
    
            var vPhoneParameter = vPhone != null ?
                new ObjectParameter("vPhone", vPhone) :
                new ObjectParameter("vPhone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_vendor_insert", vDocumentIdParameter, vDocumentNumberParameter, vNameParameter, vAddressParameter, vEmailParameter, vPhoneParameter);
        }
    
        public virtual int sp_vendor_update(string vDocumentNumber, string vName, string vAddress, string vEmail, string vPhone)
        {
            var vDocumentNumberParameter = vDocumentNumber != null ?
                new ObjectParameter("vDocumentNumber", vDocumentNumber) :
                new ObjectParameter("vDocumentNumber", typeof(string));
    
            var vNameParameter = vName != null ?
                new ObjectParameter("vName", vName) :
                new ObjectParameter("vName", typeof(string));
    
            var vAddressParameter = vAddress != null ?
                new ObjectParameter("vAddress", vAddress) :
                new ObjectParameter("vAddress", typeof(string));
    
            var vEmailParameter = vEmail != null ?
                new ObjectParameter("vEmail", vEmail) :
                new ObjectParameter("vEmail", typeof(string));
    
            var vPhoneParameter = vPhone != null ?
                new ObjectParameter("vPhone", vPhone) :
                new ObjectParameter("vPhone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_vendor_update", vDocumentNumberParameter, vNameParameter, vAddressParameter, vEmailParameter, vPhoneParameter);
        }
    
        public virtual ObjectResult<vw_Supplier> sp_supplier_list()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Supplier>("sp_supplier_list");
        }
    
        public virtual ObjectResult<vw_Supplier> sp_supplier_list(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Supplier>("sp_supplier_list", mergeOption);
        }
    
        public virtual ObjectResult<vw_Purchase> sp_purchase_list()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Purchase>("sp_purchase_list");
        }
    
        public virtual ObjectResult<vw_Purchase> sp_purchase_list(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Purchase>("sp_purchase_list", mergeOption);
        }
    
        public virtual ObjectResult<vw_Sale> sp_sale_list()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Sale>("sp_sale_list");
        }
    
        public virtual ObjectResult<vw_Sale> sp_sale_list(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Sale>("sp_sale_list", mergeOption);
        }
    
        public virtual ObjectResult<vw_Concept> sp_concept_list()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Concept>("sp_concept_list");
        }
    
        public virtual ObjectResult<vw_Concept> sp_concept_list(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Concept>("sp_concept_list", mergeOption);
        }
    
        public virtual ObjectResult<vw_Client> sp_client_list()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Client>("sp_client_list");
        }
    
        public virtual ObjectResult<vw_Client> sp_client_list(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Client>("sp_client_list", mergeOption);
        }
    
        public virtual ObjectResult<vw_Vendor> sp_vendor_list()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Vendor>("sp_vendor_list");
        }
    
        public virtual ObjectResult<vw_Vendor> sp_vendor_list(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vw_Vendor>("sp_vendor_list", mergeOption);
        }
    
        public virtual ObjectResult<Sale> sp_sale_getlast()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sale>("sp_sale_getlast");
        }
    
        public virtual ObjectResult<Sale> sp_sale_getlast(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sale>("sp_sale_getlast", mergeOption);
        }
    
        public virtual ObjectResult<Product> sp_product_getById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("sp_product_getById", idParameter);
        }
    
        public virtual ObjectResult<Product> sp_product_getById(Nullable<int> id, MergeOption mergeOption)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Product>("sp_product_getById", mergeOption, idParameter);
        }
    }
}
