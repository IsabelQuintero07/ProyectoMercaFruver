//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Login.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/ModelService")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Product[] ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string categoryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int categoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string categoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> categoryStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.cstate cstateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Product[] Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string categoryDescription {
            get {
                return this.categoryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.categoryDescriptionField, value) != true)) {
                    this.categoryDescriptionField = value;
                    this.RaisePropertyChanged("categoryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int categoryId {
            get {
                return this.categoryIdField;
            }
            set {
                if ((this.categoryIdField.Equals(value) != true)) {
                    this.categoryIdField = value;
                    this.RaisePropertyChanged("categoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string categoryName {
            get {
                return this.categoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.categoryNameField, value) != true)) {
                    this.categoryNameField = value;
                    this.RaisePropertyChanged("categoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> categoryStateId {
            get {
                return this.categoryStateIdField;
            }
            set {
                if ((this.categoryStateIdField.Equals(value) != true)) {
                    this.categoryStateIdField = value;
                    this.RaisePropertyChanged("categoryStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.cstate cstate {
            get {
                return this.cstateField;
            }
            set {
                if ((object.ReferenceEquals(this.cstateField, value) != true)) {
                    this.cstateField = value;
                    this.RaisePropertyChanged("cstate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="cstate", Namespace="http://schemas.datacontract.org/2004/07/ModelService")]
    [System.SerializableAttribute()]
    public partial class cstate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Category[] CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Client[] ClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Concept_Sale[] Concept_SaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Product[] ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Purchase[] PurchaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Sale[] SaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Supplier[] SupplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Vendor[] VendorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Category[] Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Client[] Client {
            get {
                return this.ClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientField, value) != true)) {
                    this.ClientField = value;
                    this.RaisePropertyChanged("Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Concept_Sale[] Concept_Sale {
            get {
                return this.Concept_SaleField;
            }
            set {
                if ((object.ReferenceEquals(this.Concept_SaleField, value) != true)) {
                    this.Concept_SaleField = value;
                    this.RaisePropertyChanged("Concept_Sale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Product[] Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Purchase[] Purchase {
            get {
                return this.PurchaseField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchaseField, value) != true)) {
                    this.PurchaseField = value;
                    this.RaisePropertyChanged("Purchase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Sale[] Sale {
            get {
                return this.SaleField;
            }
            set {
                if ((object.ReferenceEquals(this.SaleField, value) != true)) {
                    this.SaleField = value;
                    this.RaisePropertyChanged("Sale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Supplier[] Supplier {
            get {
                return this.SupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierField, value) != true)) {
                    this.SupplierField = value;
                    this.RaisePropertyChanged("Supplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Vendor[] Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorField, value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/ModelService")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Category CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Concept_Sale[] Concept_SaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Purchase[] PurchaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.cstate cstateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int productCategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> productCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> productCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int productIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string productNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal productSellingPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> productStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> productStockField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Category Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Concept_Sale[] Concept_Sale {
            get {
                return this.Concept_SaleField;
            }
            set {
                if ((object.ReferenceEquals(this.Concept_SaleField, value) != true)) {
                    this.Concept_SaleField = value;
                    this.RaisePropertyChanged("Concept_Sale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Purchase[] Purchase {
            get {
                return this.PurchaseField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchaseField, value) != true)) {
                    this.PurchaseField = value;
                    this.RaisePropertyChanged("Purchase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.cstate cstate {
            get {
                return this.cstateField;
            }
            set {
                if ((object.ReferenceEquals(this.cstateField, value) != true)) {
                    this.cstateField = value;
                    this.RaisePropertyChanged("cstate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int productCategoryId {
            get {
                return this.productCategoryIdField;
            }
            set {
                if ((this.productCategoryIdField.Equals(value) != true)) {
                    this.productCategoryIdField = value;
                    this.RaisePropertyChanged("productCategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> productCode {
            get {
                return this.productCodeField;
            }
            set {
                if ((this.productCodeField.Equals(value) != true)) {
                    this.productCodeField = value;
                    this.RaisePropertyChanged("productCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> productCost {
            get {
                return this.productCostField;
            }
            set {
                if ((this.productCostField.Equals(value) != true)) {
                    this.productCostField = value;
                    this.RaisePropertyChanged("productCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int productId {
            get {
                return this.productIdField;
            }
            set {
                if ((this.productIdField.Equals(value) != true)) {
                    this.productIdField = value;
                    this.RaisePropertyChanged("productId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string productName {
            get {
                return this.productNameField;
            }
            set {
                if ((object.ReferenceEquals(this.productNameField, value) != true)) {
                    this.productNameField = value;
                    this.RaisePropertyChanged("productName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal productSellingPrice {
            get {
                return this.productSellingPriceField;
            }
            set {
                if ((this.productSellingPriceField.Equals(value) != true)) {
                    this.productSellingPriceField = value;
                    this.RaisePropertyChanged("productSellingPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> productStateId {
            get {
                return this.productStateIdField;
            }
            set {
                if ((this.productStateIdField.Equals(value) != true)) {
                    this.productStateIdField = value;
                    this.RaisePropertyChanged("productStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> productStock {
            get {
                return this.productStockField;
            }
            set {
                if ((this.productStockField.Equals(value) != true)) {
                    this.productStockField = value;
                    this.RaisePropertyChanged("productStock");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Concept_Sale", Namespace="http://schemas.datacontract.org/2004/07/ModelService")]
    [System.SerializableAttribute()]
    public partial class Concept_Sale : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Sale SaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int conceptIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int conceptProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int conceptQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int conceptSaleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int conceptStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> conceptUnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.cstate cstateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Sale Sale {
            get {
                return this.SaleField;
            }
            set {
                if ((object.ReferenceEquals(this.SaleField, value) != true)) {
                    this.SaleField = value;
                    this.RaisePropertyChanged("Sale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int conceptId {
            get {
                return this.conceptIdField;
            }
            set {
                if ((this.conceptIdField.Equals(value) != true)) {
                    this.conceptIdField = value;
                    this.RaisePropertyChanged("conceptId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int conceptProductId {
            get {
                return this.conceptProductIdField;
            }
            set {
                if ((this.conceptProductIdField.Equals(value) != true)) {
                    this.conceptProductIdField = value;
                    this.RaisePropertyChanged("conceptProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int conceptQuantity {
            get {
                return this.conceptQuantityField;
            }
            set {
                if ((this.conceptQuantityField.Equals(value) != true)) {
                    this.conceptQuantityField = value;
                    this.RaisePropertyChanged("conceptQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int conceptSaleId {
            get {
                return this.conceptSaleIdField;
            }
            set {
                if ((this.conceptSaleIdField.Equals(value) != true)) {
                    this.conceptSaleIdField = value;
                    this.RaisePropertyChanged("conceptSaleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int conceptStateId {
            get {
                return this.conceptStateIdField;
            }
            set {
                if ((this.conceptStateIdField.Equals(value) != true)) {
                    this.conceptStateIdField = value;
                    this.RaisePropertyChanged("conceptStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> conceptUnitPrice {
            get {
                return this.conceptUnitPriceField;
            }
            set {
                if ((this.conceptUnitPriceField.Equals(value) != true)) {
                    this.conceptUnitPriceField = value;
                    this.RaisePropertyChanged("conceptUnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.cstate cstate {
            get {
                return this.cstateField;
            }
            set {
                if ((object.ReferenceEquals(this.cstateField, value) != true)) {
                    this.cstateField = value;
                    this.RaisePropertyChanged("cstate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Purchase", Namespace="http://schemas.datacontract.org/2004/07/ModelService")]
    [System.SerializableAttribute()]
    public partial class Purchase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Supplier SupplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.cstate cstateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime purchaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int purchaseIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int purchaseProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int purchaseQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int purchaseStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int purchaseSupplierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal purchaseUnitCostField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Supplier Supplier {
            get {
                return this.SupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierField, value) != true)) {
                    this.SupplierField = value;
                    this.RaisePropertyChanged("Supplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.cstate cstate {
            get {
                return this.cstateField;
            }
            set {
                if ((object.ReferenceEquals(this.cstateField, value) != true)) {
                    this.cstateField = value;
                    this.RaisePropertyChanged("cstate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime purchaseDate {
            get {
                return this.purchaseDateField;
            }
            set {
                if ((this.purchaseDateField.Equals(value) != true)) {
                    this.purchaseDateField = value;
                    this.RaisePropertyChanged("purchaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int purchaseId {
            get {
                return this.purchaseIdField;
            }
            set {
                if ((this.purchaseIdField.Equals(value) != true)) {
                    this.purchaseIdField = value;
                    this.RaisePropertyChanged("purchaseId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int purchaseProductId {
            get {
                return this.purchaseProductIdField;
            }
            set {
                if ((this.purchaseProductIdField.Equals(value) != true)) {
                    this.purchaseProductIdField = value;
                    this.RaisePropertyChanged("purchaseProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int purchaseQuantity {
            get {
                return this.purchaseQuantityField;
            }
            set {
                if ((this.purchaseQuantityField.Equals(value) != true)) {
                    this.purchaseQuantityField = value;
                    this.RaisePropertyChanged("purchaseQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int purchaseStateId {
            get {
                return this.purchaseStateIdField;
            }
            set {
                if ((this.purchaseStateIdField.Equals(value) != true)) {
                    this.purchaseStateIdField = value;
                    this.RaisePropertyChanged("purchaseStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int purchaseSupplierId {
            get {
                return this.purchaseSupplierIdField;
            }
            set {
                if ((this.purchaseSupplierIdField.Equals(value) != true)) {
                    this.purchaseSupplierIdField = value;
                    this.RaisePropertyChanged("purchaseSupplierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal purchaseUnitCost {
            get {
                return this.purchaseUnitCostField;
            }
            set {
                if ((this.purchaseUnitCostField.Equals(value) != true)) {
                    this.purchaseUnitCostField = value;
                    this.RaisePropertyChanged("purchaseUnitCost");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sale", Namespace="http://schemas.datacontract.org/2004/07/ModelService")]
    [System.SerializableAttribute()]
    public partial class Sale : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Client ClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Concept_Sale[] Concept_SaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Vendor VendorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.cstate cstateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int saleClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> saleDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> saleDiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int saleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int saleStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal saleTotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int saleVendorIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Client Client {
            get {
                return this.ClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientField, value) != true)) {
                    this.ClientField = value;
                    this.RaisePropertyChanged("Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Concept_Sale[] Concept_Sale {
            get {
                return this.Concept_SaleField;
            }
            set {
                if ((object.ReferenceEquals(this.Concept_SaleField, value) != true)) {
                    this.Concept_SaleField = value;
                    this.RaisePropertyChanged("Concept_Sale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Vendor Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorField, value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.cstate cstate {
            get {
                return this.cstateField;
            }
            set {
                if ((object.ReferenceEquals(this.cstateField, value) != true)) {
                    this.cstateField = value;
                    this.RaisePropertyChanged("cstate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int saleClientId {
            get {
                return this.saleClientIdField;
            }
            set {
                if ((this.saleClientIdField.Equals(value) != true)) {
                    this.saleClientIdField = value;
                    this.RaisePropertyChanged("saleClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> saleDate {
            get {
                return this.saleDateField;
            }
            set {
                if ((this.saleDateField.Equals(value) != true)) {
                    this.saleDateField = value;
                    this.RaisePropertyChanged("saleDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> saleDiscount {
            get {
                return this.saleDiscountField;
            }
            set {
                if ((this.saleDiscountField.Equals(value) != true)) {
                    this.saleDiscountField = value;
                    this.RaisePropertyChanged("saleDiscount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int saleId {
            get {
                return this.saleIdField;
            }
            set {
                if ((this.saleIdField.Equals(value) != true)) {
                    this.saleIdField = value;
                    this.RaisePropertyChanged("saleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int saleStateId {
            get {
                return this.saleStateIdField;
            }
            set {
                if ((this.saleStateIdField.Equals(value) != true)) {
                    this.saleStateIdField = value;
                    this.RaisePropertyChanged("saleStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal saleTotal {
            get {
                return this.saleTotalField;
            }
            set {
                if ((this.saleTotalField.Equals(value) != true)) {
                    this.saleTotalField = value;
                    this.RaisePropertyChanged("saleTotal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int saleVendorId {
            get {
                return this.saleVendorIdField;
            }
            set {
                if ((this.saleVendorIdField.Equals(value) != true)) {
                    this.saleVendorIdField = value;
                    this.RaisePropertyChanged("saleVendorId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/ModelService")]
    [System.SerializableAttribute()]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Document_Type Document_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Sale[] SaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string clientAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string clientDocumentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int clientDocumentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string clientEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int clientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string clientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string clientPhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> clientStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.cstate cstateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Document_Type Document_Type {
            get {
                return this.Document_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.Document_TypeField, value) != true)) {
                    this.Document_TypeField = value;
                    this.RaisePropertyChanged("Document_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Sale[] Sale {
            get {
                return this.SaleField;
            }
            set {
                if ((object.ReferenceEquals(this.SaleField, value) != true)) {
                    this.SaleField = value;
                    this.RaisePropertyChanged("Sale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string clientAddress {
            get {
                return this.clientAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.clientAddressField, value) != true)) {
                    this.clientAddressField = value;
                    this.RaisePropertyChanged("clientAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string clientDocumentNumber {
            get {
                return this.clientDocumentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.clientDocumentNumberField, value) != true)) {
                    this.clientDocumentNumberField = value;
                    this.RaisePropertyChanged("clientDocumentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int clientDocumentTypeId {
            get {
                return this.clientDocumentTypeIdField;
            }
            set {
                if ((this.clientDocumentTypeIdField.Equals(value) != true)) {
                    this.clientDocumentTypeIdField = value;
                    this.RaisePropertyChanged("clientDocumentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string clientEmail {
            get {
                return this.clientEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.clientEmailField, value) != true)) {
                    this.clientEmailField = value;
                    this.RaisePropertyChanged("clientEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int clientId {
            get {
                return this.clientIdField;
            }
            set {
                if ((this.clientIdField.Equals(value) != true)) {
                    this.clientIdField = value;
                    this.RaisePropertyChanged("clientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string clientName {
            get {
                return this.clientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.clientNameField, value) != true)) {
                    this.clientNameField = value;
                    this.RaisePropertyChanged("clientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string clientPhoneNumber {
            get {
                return this.clientPhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.clientPhoneNumberField, value) != true)) {
                    this.clientPhoneNumberField = value;
                    this.RaisePropertyChanged("clientPhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> clientStateId {
            get {
                return this.clientStateIdField;
            }
            set {
                if ((this.clientStateIdField.Equals(value) != true)) {
                    this.clientStateIdField = value;
                    this.RaisePropertyChanged("clientStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.cstate cstate {
            get {
                return this.cstateField;
            }
            set {
                if ((object.ReferenceEquals(this.cstateField, value) != true)) {
                    this.cstateField = value;
                    this.RaisePropertyChanged("cstate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vendor", Namespace="http://schemas.datacontract.org/2004/07/ModelService")]
    [System.SerializableAttribute()]
    public partial class Vendor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Document_Type Document_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Sale[] SaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.cstate cstateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vendorAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int vendorDocumentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vendorDocumentTypeNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vendorEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int vendorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vendorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vendorPhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> vendorStateIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Document_Type Document_Type {
            get {
                return this.Document_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.Document_TypeField, value) != true)) {
                    this.Document_TypeField = value;
                    this.RaisePropertyChanged("Document_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Sale[] Sale {
            get {
                return this.SaleField;
            }
            set {
                if ((object.ReferenceEquals(this.SaleField, value) != true)) {
                    this.SaleField = value;
                    this.RaisePropertyChanged("Sale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.cstate cstate {
            get {
                return this.cstateField;
            }
            set {
                if ((object.ReferenceEquals(this.cstateField, value) != true)) {
                    this.cstateField = value;
                    this.RaisePropertyChanged("cstate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vendorAddress {
            get {
                return this.vendorAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.vendorAddressField, value) != true)) {
                    this.vendorAddressField = value;
                    this.RaisePropertyChanged("vendorAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int vendorDocumentTypeId {
            get {
                return this.vendorDocumentTypeIdField;
            }
            set {
                if ((this.vendorDocumentTypeIdField.Equals(value) != true)) {
                    this.vendorDocumentTypeIdField = value;
                    this.RaisePropertyChanged("vendorDocumentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vendorDocumentTypeNumber {
            get {
                return this.vendorDocumentTypeNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.vendorDocumentTypeNumberField, value) != true)) {
                    this.vendorDocumentTypeNumberField = value;
                    this.RaisePropertyChanged("vendorDocumentTypeNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vendorEmail {
            get {
                return this.vendorEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.vendorEmailField, value) != true)) {
                    this.vendorEmailField = value;
                    this.RaisePropertyChanged("vendorEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int vendorId {
            get {
                return this.vendorIdField;
            }
            set {
                if ((this.vendorIdField.Equals(value) != true)) {
                    this.vendorIdField = value;
                    this.RaisePropertyChanged("vendorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vendorName {
            get {
                return this.vendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.vendorNameField, value) != true)) {
                    this.vendorNameField = value;
                    this.RaisePropertyChanged("vendorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vendorPhoneNumber {
            get {
                return this.vendorPhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.vendorPhoneNumberField, value) != true)) {
                    this.vendorPhoneNumberField = value;
                    this.RaisePropertyChanged("vendorPhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> vendorStateId {
            get {
                return this.vendorStateIdField;
            }
            set {
                if ((this.vendorStateIdField.Equals(value) != true)) {
                    this.vendorStateIdField = value;
                    this.RaisePropertyChanged("vendorStateId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Document_Type", Namespace="http://schemas.datacontract.org/2004/07/ModelService")]
    [System.SerializableAttribute()]
    public partial class Document_Type : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Client[] ClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Vendor[] VendorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int documentTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string documentTypeNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Client[] Client {
            get {
                return this.ClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientField, value) != true)) {
                    this.ClientField = value;
                    this.RaisePropertyChanged("Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Vendor[] Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorField, value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int documentTypeId {
            get {
                return this.documentTypeIdField;
            }
            set {
                if ((this.documentTypeIdField.Equals(value) != true)) {
                    this.documentTypeIdField = value;
                    this.RaisePropertyChanged("documentTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string documentTypeName {
            get {
                return this.documentTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.documentTypeNameField, value) != true)) {
                    this.documentTypeNameField = value;
                    this.RaisePropertyChanged("documentTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Supplier", Namespace="http://schemas.datacontract.org/2004/07/ModelService")]
    [System.SerializableAttribute()]
    public partial class Supplier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.Purchase[] PurchaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Login.ServiceReference.cstate cstateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string supplierAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string supplierCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int supplierIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string supplierNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int supplierNitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string supplierPhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> supplierStateIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string supplierWebpageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.Purchase[] Purchase {
            get {
                return this.PurchaseField;
            }
            set {
                if ((object.ReferenceEquals(this.PurchaseField, value) != true)) {
                    this.PurchaseField = value;
                    this.RaisePropertyChanged("Purchase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Login.ServiceReference.cstate cstate {
            get {
                return this.cstateField;
            }
            set {
                if ((object.ReferenceEquals(this.cstateField, value) != true)) {
                    this.cstateField = value;
                    this.RaisePropertyChanged("cstate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string supplierAddress {
            get {
                return this.supplierAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.supplierAddressField, value) != true)) {
                    this.supplierAddressField = value;
                    this.RaisePropertyChanged("supplierAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string supplierCity {
            get {
                return this.supplierCityField;
            }
            set {
                if ((object.ReferenceEquals(this.supplierCityField, value) != true)) {
                    this.supplierCityField = value;
                    this.RaisePropertyChanged("supplierCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int supplierId {
            get {
                return this.supplierIdField;
            }
            set {
                if ((this.supplierIdField.Equals(value) != true)) {
                    this.supplierIdField = value;
                    this.RaisePropertyChanged("supplierId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string supplierName {
            get {
                return this.supplierNameField;
            }
            set {
                if ((object.ReferenceEquals(this.supplierNameField, value) != true)) {
                    this.supplierNameField = value;
                    this.RaisePropertyChanged("supplierName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int supplierNit {
            get {
                return this.supplierNitField;
            }
            set {
                if ((this.supplierNitField.Equals(value) != true)) {
                    this.supplierNitField = value;
                    this.RaisePropertyChanged("supplierNit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string supplierPhoneNumber {
            get {
                return this.supplierPhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.supplierPhoneNumberField, value) != true)) {
                    this.supplierPhoneNumberField = value;
                    this.RaisePropertyChanged("supplierPhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> supplierStateId {
            get {
                return this.supplierStateIdField;
            }
            set {
                if ((this.supplierStateIdField.Equals(value) != true)) {
                    this.supplierStateIdField = value;
                    this.RaisePropertyChanged("supplierStateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string supplierWebpage {
            get {
                return this.supplierWebpageField;
            }
            set {
                if ((object.ReferenceEquals(this.supplierWebpageField, value) != true)) {
                    this.supplierWebpageField = value;
                    this.RaisePropertyChanged("supplierWebpage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vw_Product", Namespace="http://schemas.datacontract.org/2004/07/ModelService")]
    [System.SerializableAttribute()]
    public partial class vw_Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int productIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Stock {
            get {
                return this.StockField;
            }
            set {
                if ((this.StockField.Equals(value) != true)) {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int productId {
            get {
                return this.productIdField;
            }
            set {
                if ((this.productIdField.Equals(value) != true)) {
                    this.productIdField = value;
                    this.RaisePropertyChanged("productId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vw_Purchase", Namespace="http://schemas.datacontract.org/2004/07/ModelService")]
    [System.SerializableAttribute()]
    public partial class vw_Purchase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PurchaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SupplierField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnitCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int purchaseIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PurchaseDate {
            get {
                return this.PurchaseDateField;
            }
            set {
                if ((this.PurchaseDateField.Equals(value) != true)) {
                    this.PurchaseDateField = value;
                    this.RaisePropertyChanged("PurchaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Supplier {
            get {
                return this.SupplierField;
            }
            set {
                if ((object.ReferenceEquals(this.SupplierField, value) != true)) {
                    this.SupplierField = value;
                    this.RaisePropertyChanged("Supplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UnitCost {
            get {
                return this.UnitCostField;
            }
            set {
                if ((this.UnitCostField.Equals(value) != true)) {
                    this.UnitCostField = value;
                    this.RaisePropertyChanged("UnitCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int purchaseId {
            get {
                return this.purchaseIdField;
            }
            set {
                if ((this.purchaseIdField.Equals(value) != true)) {
                    this.purchaseIdField = value;
                    this.RaisePropertyChanged("purchaseId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vw_Supplier", Namespace="http://schemas.datacontract.org/2004/07/ModelService")]
    [System.SerializableAttribute()]
    public partial class vw_Supplier : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebpageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int supplierIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Nit {
            get {
                return this.NitField;
            }
            set {
                if ((this.NitField.Equals(value) != true)) {
                    this.NitField = value;
                    this.RaisePropertyChanged("Nit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Webpage {
            get {
                return this.WebpageField;
            }
            set {
                if ((object.ReferenceEquals(this.WebpageField, value) != true)) {
                    this.WebpageField = value;
                    this.RaisePropertyChanged("Webpage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int supplierId {
            get {
                return this.supplierIdField;
            }
            set {
                if ((this.supplierIdField.Equals(value) != true)) {
                    this.supplierIdField = value;
                    this.RaisePropertyChanged("supplierId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vw_Client", Namespace="http://schemas.datacontract.org/2004/07/ModelService")]
    [System.SerializableAttribute()]
    public partial class vw_Client : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int clientIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentNumber {
            get {
                return this.DocumentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNumberField, value) != true)) {
                    this.DocumentNumberField = value;
                    this.RaisePropertyChanged("DocumentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int clientId {
            get {
                return this.clientIdField;
            }
            set {
                if ((this.clientIdField.Equals(value) != true)) {
                    this.clientIdField = value;
                    this.RaisePropertyChanged("clientId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vw_Concept", Namespace="http://schemas.datacontract.org/2004/07/ModelService")]
    [System.SerializableAttribute()]
    public partial class vw_Concept : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> UnitPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int conceptIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product {
            get {
                return this.ProductField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductField, value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sale {
            get {
                return this.SaleField;
            }
            set {
                if ((this.SaleField.Equals(value) != true)) {
                    this.SaleField = value;
                    this.RaisePropertyChanged("Sale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> UnitPrice {
            get {
                return this.UnitPriceField;
            }
            set {
                if ((this.UnitPriceField.Equals(value) != true)) {
                    this.UnitPriceField = value;
                    this.RaisePropertyChanged("UnitPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int conceptId {
            get {
                return this.conceptIdField;
            }
            set {
                if ((this.conceptIdField.Equals(value) != true)) {
                    this.conceptIdField = value;
                    this.RaisePropertyChanged("conceptId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vw_Sale", Namespace="http://schemas.datacontract.org/2004/07/ModelService")]
    [System.SerializableAttribute()]
    public partial class vw_Sale : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SaleDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int saleIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Client {
            get {
                return this.ClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientField, value) != true)) {
                    this.ClientField = value;
                    this.RaisePropertyChanged("Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SaleDate {
            get {
                return this.SaleDateField;
            }
            set {
                if ((this.SaleDateField.Equals(value) != true)) {
                    this.SaleDateField = value;
                    this.RaisePropertyChanged("SaleDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Vendor {
            get {
                return this.VendorField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorField, value) != true)) {
                    this.VendorField = value;
                    this.RaisePropertyChanged("Vendor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int saleId {
            get {
                return this.saleIdField;
            }
            set {
                if ((this.saleIdField.Equals(value) != true)) {
                    this.saleIdField = value;
                    this.RaisePropertyChanged("saleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="vw_Vendor", Namespace="http://schemas.datacontract.org/2004/07/ModelService")]
    [System.SerializableAttribute()]
    public partial class vw_Vendor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int vendorIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentNumber {
            get {
                return this.DocumentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNumberField, value) != true)) {
                    this.DocumentNumberField = value;
                    this.RaisePropertyChanged("DocumentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int vendorId {
            get {
                return this.vendorIdField;
            }
            set {
                if ((this.vendorIdField.Equals(value) != true)) {
                    this.vendorIdField = value;
                    this.RaisePropertyChanged("vendorId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddCategory", ReplyAction="http://tempuri.org/IService/AddCategoryResponse")]
        void AddCategory(Login.ServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddCategory", ReplyAction="http://tempuri.org/IService/AddCategoryResponse")]
        System.Threading.Tasks.Task AddCategoryAsync(Login.ServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCategory", ReplyAction="http://tempuri.org/IService/GetCategoryResponse")]
        Login.ServiceReference.Category GetCategory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetCategory", ReplyAction="http://tempuri.org/IService/GetCategoryResponse")]
        System.Threading.Tasks.Task<Login.ServiceReference.Category> GetCategoryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCategory", ReplyAction="http://tempuri.org/IService/UpdateCategoryResponse")]
        void UpdateCategory(Login.ServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateCategory", ReplyAction="http://tempuri.org/IService/UpdateCategoryResponse")]
        System.Threading.Tasks.Task UpdateCategoryAsync(Login.ServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteCategory", ReplyAction="http://tempuri.org/IService/DeleteCategoryResponse")]
        void DeleteCategory(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteCategory", ReplyAction="http://tempuri.org/IService/DeleteCategoryResponse")]
        System.Threading.Tasks.Task DeleteCategoryAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListCategory", ReplyAction="http://tempuri.org/IService/ListCategoryResponse")]
        Login.ServiceReference.Category[] ListCategory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/ListCategory", ReplyAction="http://tempuri.org/IService/ListCategoryResponse")]
        System.Threading.Tasks.Task<Login.ServiceReference.Category[]> ListCategoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddProduct", ReplyAction="http://tempuri.org/IService/AddProductResponse")]
        void AddProduct(Login.ServiceReference.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddProduct", ReplyAction="http://tempuri.org/IService/AddProductResponse")]
        System.Threading.Tasks.Task AddProductAsync(Login.ServiceReference.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProduct", ReplyAction="http://tempuri.org/IService/GetProductResponse")]
        Login.ServiceReference.Product GetProduct(int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProduct", ReplyAction="http://tempuri.org/IService/GetProductResponse")]
        System.Threading.Tasks.Task<Login.ServiceReference.Product> GetProductAsync(int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateProduct", ReplyAction="http://tempuri.org/IService/UpdateProductResponse")]
        void UpdateProduct(Login.ServiceReference.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateProduct", ReplyAction="http://tempuri.org/IService/UpdateProductResponse")]
        System.Threading.Tasks.Task UpdateProductAsync(Login.ServiceReference.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteProduct", ReplyAction="http://tempuri.org/IService/DeleteProductResponse")]
        void DeleteProduct(int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteProduct", ReplyAction="http://tempuri.org/IService/DeleteProductResponse")]
        System.Threading.Tasks.Task DeleteProductAsync(int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllProducts", ReplyAction="http://tempuri.org/IService/GetAllProductsResponse")]
        Login.ServiceReference.vw_Product[] GetAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllProducts", ReplyAction="http://tempuri.org/IService/GetAllProductsResponse")]
        System.Threading.Tasks.Task<Login.ServiceReference.vw_Product[]> GetAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProductId", ReplyAction="http://tempuri.org/IService/GetProductIdResponse")]
        Login.ServiceReference.Product GetProductId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetProductId", ReplyAction="http://tempuri.org/IService/GetProductIdResponse")]
        System.Threading.Tasks.Task<Login.ServiceReference.Product> GetProductIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddPurchase", ReplyAction="http://tempuri.org/IService/AddPurchaseResponse")]
        void AddPurchase(Login.ServiceReference.Purchase purchase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddPurchase", ReplyAction="http://tempuri.org/IService/AddPurchaseResponse")]
        System.Threading.Tasks.Task AddPurchaseAsync(Login.ServiceReference.Purchase purchase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPurchase", ReplyAction="http://tempuri.org/IService/GetPurchaseResponse")]
        Login.ServiceReference.Purchase GetPurchase(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetPurchase", ReplyAction="http://tempuri.org/IService/GetPurchaseResponse")]
        System.Threading.Tasks.Task<Login.ServiceReference.Purchase> GetPurchaseAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdatePurchase", ReplyAction="http://tempuri.org/IService/UpdatePurchaseResponse")]
        void UpdatePurchase(Login.ServiceReference.Purchase purchase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdatePurchase", ReplyAction="http://tempuri.org/IService/UpdatePurchaseResponse")]
        System.Threading.Tasks.Task UpdatePurchaseAsync(Login.ServiceReference.Purchase purchase);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeletePurchase", ReplyAction="http://tempuri.org/IService/DeletePurchaseResponse")]
        void DeletePurchase(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeletePurchase", ReplyAction="http://tempuri.org/IService/DeletePurchaseResponse")]
        System.Threading.Tasks.Task DeletePurchaseAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllPurchases", ReplyAction="http://tempuri.org/IService/GetAllPurchasesResponse")]
        Login.ServiceReference.vw_Purchase[] GetAllPurchases();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllPurchases", ReplyAction="http://tempuri.org/IService/GetAllPurchasesResponse")]
        System.Threading.Tasks.Task<Login.ServiceReference.vw_Purchase[]> GetAllPurchasesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddSupplier", ReplyAction="http://tempuri.org/IService/AddSupplierResponse")]
        void AddSupplier(Login.ServiceReference.Supplier supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddSupplier", ReplyAction="http://tempuri.org/IService/AddSupplierResponse")]
        System.Threading.Tasks.Task AddSupplierAsync(Login.ServiceReference.Supplier supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSupplier", ReplyAction="http://tempuri.org/IService/GetSupplierResponse")]
        Login.ServiceReference.Supplier GetSupplier(int nit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSupplier", ReplyAction="http://tempuri.org/IService/GetSupplierResponse")]
        System.Threading.Tasks.Task<Login.ServiceReference.Supplier> GetSupplierAsync(int nit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateSupplier", ReplyAction="http://tempuri.org/IService/UpdateSupplierResponse")]
        void UpdateSupplier(Login.ServiceReference.Supplier supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateSupplier", ReplyAction="http://tempuri.org/IService/UpdateSupplierResponse")]
        System.Threading.Tasks.Task UpdateSupplierAsync(Login.ServiceReference.Supplier supplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSupplier", ReplyAction="http://tempuri.org/IService/DeleteSupplierResponse")]
        void DeleteSupplier(int nit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSupplier", ReplyAction="http://tempuri.org/IService/DeleteSupplierResponse")]
        System.Threading.Tasks.Task DeleteSupplierAsync(int nit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllSuppliers", ReplyAction="http://tempuri.org/IService/GetAllSuppliersResponse")]
        Login.ServiceReference.vw_Supplier[] GetAllSuppliers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllSuppliers", ReplyAction="http://tempuri.org/IService/GetAllSuppliersResponse")]
        System.Threading.Tasks.Task<Login.ServiceReference.vw_Supplier[]> GetAllSuppliersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddClient", ReplyAction="http://tempuri.org/IService/AddClientResponse")]
        void AddClient(Login.ServiceReference.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddClient", ReplyAction="http://tempuri.org/IService/AddClientResponse")]
        System.Threading.Tasks.Task AddClientAsync(Login.ServiceReference.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetClient", ReplyAction="http://tempuri.org/IService/GetClientResponse")]
        Login.ServiceReference.Client GetClient(string documentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetClient", ReplyAction="http://tempuri.org/IService/GetClientResponse")]
        System.Threading.Tasks.Task<Login.ServiceReference.Client> GetClientAsync(string documentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateClient", ReplyAction="http://tempuri.org/IService/UpdateClientResponse")]
        void UpdateClient(Login.ServiceReference.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateClient", ReplyAction="http://tempuri.org/IService/UpdateClientResponse")]
        System.Threading.Tasks.Task UpdateClientAsync(Login.ServiceReference.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteClient", ReplyAction="http://tempuri.org/IService/DeleteClientResponse")]
        void DeleteClient(string documentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteClient", ReplyAction="http://tempuri.org/IService/DeleteClientResponse")]
        System.Threading.Tasks.Task DeleteClientAsync(string documentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllClients", ReplyAction="http://tempuri.org/IService/GetAllClientsResponse")]
        Login.ServiceReference.vw_Client[] GetAllClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllClients", ReplyAction="http://tempuri.org/IService/GetAllClientsResponse")]
        System.Threading.Tasks.Task<Login.ServiceReference.vw_Client[]> GetAllClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddConcept", ReplyAction="http://tempuri.org/IService/AddConceptResponse")]
        void AddConcept(Login.ServiceReference.Concept_Sale concept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddConcept", ReplyAction="http://tempuri.org/IService/AddConceptResponse")]
        System.Threading.Tasks.Task AddConceptAsync(Login.ServiceReference.Concept_Sale concept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetConcept", ReplyAction="http://tempuri.org/IService/GetConceptResponse")]
        Login.ServiceReference.Concept_Sale GetConcept(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetConcept", ReplyAction="http://tempuri.org/IService/GetConceptResponse")]
        System.Threading.Tasks.Task<Login.ServiceReference.Concept_Sale> GetConceptAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateConcept", ReplyAction="http://tempuri.org/IService/UpdateConceptResponse")]
        void UpdateConcept(Login.ServiceReference.Concept_Sale concept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateConcept", ReplyAction="http://tempuri.org/IService/UpdateConceptResponse")]
        System.Threading.Tasks.Task UpdateConceptAsync(Login.ServiceReference.Concept_Sale concept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteConcept", ReplyAction="http://tempuri.org/IService/DeleteConceptResponse")]
        void DeleteConcept(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteConcept", ReplyAction="http://tempuri.org/IService/DeleteConceptResponse")]
        System.Threading.Tasks.Task DeleteConceptAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllConcepts", ReplyAction="http://tempuri.org/IService/GetAllConceptsResponse")]
        Login.ServiceReference.vw_Concept[] GetAllConcepts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllConcepts", ReplyAction="http://tempuri.org/IService/GetAllConceptsResponse")]
        System.Threading.Tasks.Task<Login.ServiceReference.vw_Concept[]> GetAllConceptsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddSale", ReplyAction="http://tempuri.org/IService/AddSaleResponse")]
        void AddSale(Login.ServiceReference.Sale sale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddSale", ReplyAction="http://tempuri.org/IService/AddSaleResponse")]
        System.Threading.Tasks.Task AddSaleAsync(Login.ServiceReference.Sale sale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSale", ReplyAction="http://tempuri.org/IService/GetSaleResponse")]
        Login.ServiceReference.Sale GetSale(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSale", ReplyAction="http://tempuri.org/IService/GetSaleResponse")]
        System.Threading.Tasks.Task<Login.ServiceReference.Sale> GetSaleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateSale", ReplyAction="http://tempuri.org/IService/UpdateSaleResponse")]
        void UpdateSale(Login.ServiceReference.Sale sale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateSale", ReplyAction="http://tempuri.org/IService/UpdateSaleResponse")]
        System.Threading.Tasks.Task UpdateSaleAsync(Login.ServiceReference.Sale sale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSale", ReplyAction="http://tempuri.org/IService/DeleteSaleResponse")]
        void DeleteSale(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSale", ReplyAction="http://tempuri.org/IService/DeleteSaleResponse")]
        System.Threading.Tasks.Task DeleteSaleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllSales", ReplyAction="http://tempuri.org/IService/GetAllSalesResponse")]
        Login.ServiceReference.vw_Sale[] GetAllSales();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllSales", ReplyAction="http://tempuri.org/IService/GetAllSalesResponse")]
        System.Threading.Tasks.Task<Login.ServiceReference.vw_Sale[]> GetAllSalesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastSale", ReplyAction="http://tempuri.org/IService/GetLastSaleResponse")]
        Login.ServiceReference.Sale GetLastSale();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLastSale", ReplyAction="http://tempuri.org/IService/GetLastSaleResponse")]
        System.Threading.Tasks.Task<Login.ServiceReference.Sale> GetLastSaleAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddVendor", ReplyAction="http://tempuri.org/IService/AddVendorResponse")]
        void AddVendor(Login.ServiceReference.Vendor vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddVendor", ReplyAction="http://tempuri.org/IService/AddVendorResponse")]
        System.Threading.Tasks.Task AddVendorAsync(Login.ServiceReference.Vendor vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVendor", ReplyAction="http://tempuri.org/IService/GetVendorResponse")]
        Login.ServiceReference.Vendor GetVendor(string documentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetVendor", ReplyAction="http://tempuri.org/IService/GetVendorResponse")]
        System.Threading.Tasks.Task<Login.ServiceReference.Vendor> GetVendorAsync(string documentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateVendor", ReplyAction="http://tempuri.org/IService/UpdateVendorResponse")]
        void UpdateVendor(Login.ServiceReference.Vendor vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateVendor", ReplyAction="http://tempuri.org/IService/UpdateVendorResponse")]
        System.Threading.Tasks.Task UpdateVendorAsync(Login.ServiceReference.Vendor vendor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteVendor", ReplyAction="http://tempuri.org/IService/DeleteVendorResponse")]
        void DeleteVendor(string documentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteVendor", ReplyAction="http://tempuri.org/IService/DeleteVendorResponse")]
        System.Threading.Tasks.Task DeleteVendorAsync(string documentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllVendors", ReplyAction="http://tempuri.org/IService/GetAllVendorsResponse")]
        Login.ServiceReference.vw_Vendor[] GetAllVendors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllVendors", ReplyAction="http://tempuri.org/IService/GetAllVendorsResponse")]
        System.Threading.Tasks.Task<Login.ServiceReference.vw_Vendor[]> GetAllVendorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllDocuments", ReplyAction="http://tempuri.org/IService/GetAllDocumentsResponse")]
        Login.ServiceReference.Document_Type[] GetAllDocuments();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllDocuments", ReplyAction="http://tempuri.org/IService/GetAllDocumentsResponse")]
        System.Threading.Tasks.Task<Login.ServiceReference.Document_Type[]> GetAllDocumentsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : Login.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Login.ServiceReference.IService>, Login.ServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddCategory(Login.ServiceReference.Category category) {
            base.Channel.AddCategory(category);
        }
        
        public System.Threading.Tasks.Task AddCategoryAsync(Login.ServiceReference.Category category) {
            return base.Channel.AddCategoryAsync(category);
        }
        
        public Login.ServiceReference.Category GetCategory(int id) {
            return base.Channel.GetCategory(id);
        }
        
        public System.Threading.Tasks.Task<Login.ServiceReference.Category> GetCategoryAsync(int id) {
            return base.Channel.GetCategoryAsync(id);
        }
        
        public void UpdateCategory(Login.ServiceReference.Category category) {
            base.Channel.UpdateCategory(category);
        }
        
        public System.Threading.Tasks.Task UpdateCategoryAsync(Login.ServiceReference.Category category) {
            return base.Channel.UpdateCategoryAsync(category);
        }
        
        public void DeleteCategory(int id) {
            base.Channel.DeleteCategory(id);
        }
        
        public System.Threading.Tasks.Task DeleteCategoryAsync(int id) {
            return base.Channel.DeleteCategoryAsync(id);
        }
        
        public Login.ServiceReference.Category[] ListCategory() {
            return base.Channel.ListCategory();
        }
        
        public System.Threading.Tasks.Task<Login.ServiceReference.Category[]> ListCategoryAsync() {
            return base.Channel.ListCategoryAsync();
        }
        
        public void AddProduct(Login.ServiceReference.Product product) {
            base.Channel.AddProduct(product);
        }
        
        public System.Threading.Tasks.Task AddProductAsync(Login.ServiceReference.Product product) {
            return base.Channel.AddProductAsync(product);
        }
        
        public Login.ServiceReference.Product GetProduct(int code) {
            return base.Channel.GetProduct(code);
        }
        
        public System.Threading.Tasks.Task<Login.ServiceReference.Product> GetProductAsync(int code) {
            return base.Channel.GetProductAsync(code);
        }
        
        public void UpdateProduct(Login.ServiceReference.Product product) {
            base.Channel.UpdateProduct(product);
        }
        
        public System.Threading.Tasks.Task UpdateProductAsync(Login.ServiceReference.Product product) {
            return base.Channel.UpdateProductAsync(product);
        }
        
        public void DeleteProduct(int code) {
            base.Channel.DeleteProduct(code);
        }
        
        public System.Threading.Tasks.Task DeleteProductAsync(int code) {
            return base.Channel.DeleteProductAsync(code);
        }
        
        public Login.ServiceReference.vw_Product[] GetAllProducts() {
            return base.Channel.GetAllProducts();
        }
        
        public System.Threading.Tasks.Task<Login.ServiceReference.vw_Product[]> GetAllProductsAsync() {
            return base.Channel.GetAllProductsAsync();
        }
        
        public Login.ServiceReference.Product GetProductId(int id) {
            return base.Channel.GetProductId(id);
        }
        
        public System.Threading.Tasks.Task<Login.ServiceReference.Product> GetProductIdAsync(int id) {
            return base.Channel.GetProductIdAsync(id);
        }
        
        public void AddPurchase(Login.ServiceReference.Purchase purchase) {
            base.Channel.AddPurchase(purchase);
        }
        
        public System.Threading.Tasks.Task AddPurchaseAsync(Login.ServiceReference.Purchase purchase) {
            return base.Channel.AddPurchaseAsync(purchase);
        }
        
        public Login.ServiceReference.Purchase GetPurchase(int id) {
            return base.Channel.GetPurchase(id);
        }
        
        public System.Threading.Tasks.Task<Login.ServiceReference.Purchase> GetPurchaseAsync(int id) {
            return base.Channel.GetPurchaseAsync(id);
        }
        
        public void UpdatePurchase(Login.ServiceReference.Purchase purchase) {
            base.Channel.UpdatePurchase(purchase);
        }
        
        public System.Threading.Tasks.Task UpdatePurchaseAsync(Login.ServiceReference.Purchase purchase) {
            return base.Channel.UpdatePurchaseAsync(purchase);
        }
        
        public void DeletePurchase(int id) {
            base.Channel.DeletePurchase(id);
        }
        
        public System.Threading.Tasks.Task DeletePurchaseAsync(int id) {
            return base.Channel.DeletePurchaseAsync(id);
        }
        
        public Login.ServiceReference.vw_Purchase[] GetAllPurchases() {
            return base.Channel.GetAllPurchases();
        }
        
        public System.Threading.Tasks.Task<Login.ServiceReference.vw_Purchase[]> GetAllPurchasesAsync() {
            return base.Channel.GetAllPurchasesAsync();
        }
        
        public void AddSupplier(Login.ServiceReference.Supplier supplier) {
            base.Channel.AddSupplier(supplier);
        }
        
        public System.Threading.Tasks.Task AddSupplierAsync(Login.ServiceReference.Supplier supplier) {
            return base.Channel.AddSupplierAsync(supplier);
        }
        
        public Login.ServiceReference.Supplier GetSupplier(int nit) {
            return base.Channel.GetSupplier(nit);
        }
        
        public System.Threading.Tasks.Task<Login.ServiceReference.Supplier> GetSupplierAsync(int nit) {
            return base.Channel.GetSupplierAsync(nit);
        }
        
        public void UpdateSupplier(Login.ServiceReference.Supplier supplier) {
            base.Channel.UpdateSupplier(supplier);
        }
        
        public System.Threading.Tasks.Task UpdateSupplierAsync(Login.ServiceReference.Supplier supplier) {
            return base.Channel.UpdateSupplierAsync(supplier);
        }
        
        public void DeleteSupplier(int nit) {
            base.Channel.DeleteSupplier(nit);
        }
        
        public System.Threading.Tasks.Task DeleteSupplierAsync(int nit) {
            return base.Channel.DeleteSupplierAsync(nit);
        }
        
        public Login.ServiceReference.vw_Supplier[] GetAllSuppliers() {
            return base.Channel.GetAllSuppliers();
        }
        
        public System.Threading.Tasks.Task<Login.ServiceReference.vw_Supplier[]> GetAllSuppliersAsync() {
            return base.Channel.GetAllSuppliersAsync();
        }
        
        public void AddClient(Login.ServiceReference.Client client) {
            base.Channel.AddClient(client);
        }
        
        public System.Threading.Tasks.Task AddClientAsync(Login.ServiceReference.Client client) {
            return base.Channel.AddClientAsync(client);
        }
        
        public Login.ServiceReference.Client GetClient(string documentNumber) {
            return base.Channel.GetClient(documentNumber);
        }
        
        public System.Threading.Tasks.Task<Login.ServiceReference.Client> GetClientAsync(string documentNumber) {
            return base.Channel.GetClientAsync(documentNumber);
        }
        
        public void UpdateClient(Login.ServiceReference.Client client) {
            base.Channel.UpdateClient(client);
        }
        
        public System.Threading.Tasks.Task UpdateClientAsync(Login.ServiceReference.Client client) {
            return base.Channel.UpdateClientAsync(client);
        }
        
        public void DeleteClient(string documentNumber) {
            base.Channel.DeleteClient(documentNumber);
        }
        
        public System.Threading.Tasks.Task DeleteClientAsync(string documentNumber) {
            return base.Channel.DeleteClientAsync(documentNumber);
        }
        
        public Login.ServiceReference.vw_Client[] GetAllClients() {
            return base.Channel.GetAllClients();
        }
        
        public System.Threading.Tasks.Task<Login.ServiceReference.vw_Client[]> GetAllClientsAsync() {
            return base.Channel.GetAllClientsAsync();
        }
        
        public void AddConcept(Login.ServiceReference.Concept_Sale concept) {
            base.Channel.AddConcept(concept);
        }
        
        public System.Threading.Tasks.Task AddConceptAsync(Login.ServiceReference.Concept_Sale concept) {
            return base.Channel.AddConceptAsync(concept);
        }
        
        public Login.ServiceReference.Concept_Sale GetConcept(int id) {
            return base.Channel.GetConcept(id);
        }
        
        public System.Threading.Tasks.Task<Login.ServiceReference.Concept_Sale> GetConceptAsync(int id) {
            return base.Channel.GetConceptAsync(id);
        }
        
        public void UpdateConcept(Login.ServiceReference.Concept_Sale concept) {
            base.Channel.UpdateConcept(concept);
        }
        
        public System.Threading.Tasks.Task UpdateConceptAsync(Login.ServiceReference.Concept_Sale concept) {
            return base.Channel.UpdateConceptAsync(concept);
        }
        
        public void DeleteConcept(int id) {
            base.Channel.DeleteConcept(id);
        }
        
        public System.Threading.Tasks.Task DeleteConceptAsync(int id) {
            return base.Channel.DeleteConceptAsync(id);
        }
        
        public Login.ServiceReference.vw_Concept[] GetAllConcepts() {
            return base.Channel.GetAllConcepts();
        }
        
        public System.Threading.Tasks.Task<Login.ServiceReference.vw_Concept[]> GetAllConceptsAsync() {
            return base.Channel.GetAllConceptsAsync();
        }
        
        public void AddSale(Login.ServiceReference.Sale sale) {
            base.Channel.AddSale(sale);
        }
        
        public System.Threading.Tasks.Task AddSaleAsync(Login.ServiceReference.Sale sale) {
            return base.Channel.AddSaleAsync(sale);
        }
        
        public Login.ServiceReference.Sale GetSale(int id) {
            return base.Channel.GetSale(id);
        }
        
        public System.Threading.Tasks.Task<Login.ServiceReference.Sale> GetSaleAsync(int id) {
            return base.Channel.GetSaleAsync(id);
        }
        
        public void UpdateSale(Login.ServiceReference.Sale sale) {
            base.Channel.UpdateSale(sale);
        }
        
        public System.Threading.Tasks.Task UpdateSaleAsync(Login.ServiceReference.Sale sale) {
            return base.Channel.UpdateSaleAsync(sale);
        }
        
        public void DeleteSale(int id) {
            base.Channel.DeleteSale(id);
        }
        
        public System.Threading.Tasks.Task DeleteSaleAsync(int id) {
            return base.Channel.DeleteSaleAsync(id);
        }
        
        public Login.ServiceReference.vw_Sale[] GetAllSales() {
            return base.Channel.GetAllSales();
        }
        
        public System.Threading.Tasks.Task<Login.ServiceReference.vw_Sale[]> GetAllSalesAsync() {
            return base.Channel.GetAllSalesAsync();
        }
        
        public Login.ServiceReference.Sale GetLastSale() {
            return base.Channel.GetLastSale();
        }
        
        public System.Threading.Tasks.Task<Login.ServiceReference.Sale> GetLastSaleAsync() {
            return base.Channel.GetLastSaleAsync();
        }
        
        public void AddVendor(Login.ServiceReference.Vendor vendor) {
            base.Channel.AddVendor(vendor);
        }
        
        public System.Threading.Tasks.Task AddVendorAsync(Login.ServiceReference.Vendor vendor) {
            return base.Channel.AddVendorAsync(vendor);
        }
        
        public Login.ServiceReference.Vendor GetVendor(string documentNumber) {
            return base.Channel.GetVendor(documentNumber);
        }
        
        public System.Threading.Tasks.Task<Login.ServiceReference.Vendor> GetVendorAsync(string documentNumber) {
            return base.Channel.GetVendorAsync(documentNumber);
        }
        
        public void UpdateVendor(Login.ServiceReference.Vendor vendor) {
            base.Channel.UpdateVendor(vendor);
        }
        
        public System.Threading.Tasks.Task UpdateVendorAsync(Login.ServiceReference.Vendor vendor) {
            return base.Channel.UpdateVendorAsync(vendor);
        }
        
        public void DeleteVendor(string documentNumber) {
            base.Channel.DeleteVendor(documentNumber);
        }
        
        public System.Threading.Tasks.Task DeleteVendorAsync(string documentNumber) {
            return base.Channel.DeleteVendorAsync(documentNumber);
        }
        
        public Login.ServiceReference.vw_Vendor[] GetAllVendors() {
            return base.Channel.GetAllVendors();
        }
        
        public System.Threading.Tasks.Task<Login.ServiceReference.vw_Vendor[]> GetAllVendorsAsync() {
            return base.Channel.GetAllVendorsAsync();
        }
        
        public Login.ServiceReference.Document_Type[] GetAllDocuments() {
            return base.Channel.GetAllDocuments();
        }
        
        public System.Threading.Tasks.Task<Login.ServiceReference.Document_Type[]> GetAllDocumentsAsync() {
            return base.Channel.GetAllDocumentsAsync();
        }
    }
}
