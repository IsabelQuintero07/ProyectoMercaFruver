@*@model Login.ServiceReference.Product*@
@model Login.Models.ViewModels.ProductEditData

@{
    ViewBag.Title = "Edit Product";
}

<div style="color:darkred">
    @ViewBag.Limit
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Edit Product</h4>
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.productId)

    @*<div class="form-group">
            @Html.LabelFor(model => model.productCategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.productCategoryId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.productCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.productCategoryId, "category", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*@Html.EditorFor(model => model.productCategoryId, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.DropDownListFor(model => model.productCategoryId, ViewBag.CategoryId as SelectList, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.productCategoryId, "", new { @class = "text-danger" })

        </div>
    </div>

    @Html.HiddenFor(model => model.productCode)

    <div class="form-group">
        @Html.LabelFor(model => model.productName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.productName, "Name", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.productName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.productSellingPrice, "Selling Price", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.productSellingPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.productSellingPrice, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.productStock, "Stock", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.productStock, new { htmlAttributes = new { @class = "form-control" , @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.productStock, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.productStockLimit, "Stock Limit", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.productStockLimit, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.productStockLimit, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.productCost, "Cost", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.productCost, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.productCost, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success btn-sm" />
        </div>
    </div>

</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
