//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Login
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LoginEntities : DbContext
    {
        public LoginEntities()
            : base("name=LoginEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Module> Module { get; set; }
        public virtual DbSet<Operation> Operation { get; set; }
        public virtual DbSet<Rol> Rol { get; set; }
        public virtual DbSet<Rol_Operation> Rol_Operation { get; set; }
        public virtual DbSet<Users> Users { get; set; }
    
        public virtual ObjectResult<Nullable<int>> CheckLogin(string name_User, string password_User)
        {
            var name_UserParameter = name_User != null ?
                new ObjectParameter("name_User", name_User) :
                new ObjectParameter("name_User", typeof(string));
    
            var password_UserParameter = password_User != null ?
                new ObjectParameter("password_User", password_User) :
                new ObjectParameter("password_User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CheckLogin", name_UserParameter, password_UserParameter);
        }
    
        public virtual ObjectResult<string> GetPassword(string email_User)
        {
            var email_UserParameter = email_User != null ?
                new ObjectParameter("email_User", email_User) :
                new ObjectParameter("email_User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetPassword", email_UserParameter);
        }
    
        public virtual ObjectResult<Users> ProcedureCheckLogin(string name_User, string password_User)
        {
            var name_UserParameter = name_User != null ?
                new ObjectParameter("name_User", name_User) :
                new ObjectParameter("name_User", typeof(string));
    
            var password_UserParameter = password_User != null ?
                new ObjectParameter("password_User", password_User) :
                new ObjectParameter("password_User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Users>("ProcedureCheckLogin", name_UserParameter, password_UserParameter);
        }
    
        public virtual ObjectResult<Users> ProcedureCheckLogin(string name_User, string password_User, MergeOption mergeOption)
        {
            var name_UserParameter = name_User != null ?
                new ObjectParameter("name_User", name_User) :
                new ObjectParameter("name_User", typeof(string));
    
            var password_UserParameter = password_User != null ?
                new ObjectParameter("password_User", password_User) :
                new ObjectParameter("password_User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Users>("ProcedureCheckLogin", mergeOption, name_UserParameter, password_UserParameter);
        }
    
        public virtual ObjectResult<CheckToken_Result> CheckToken(string token_User)
        {
            var token_UserParameter = token_User != null ?
                new ObjectParameter("token_User", token_User) :
                new ObjectParameter("token_User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckToken_Result>("CheckToken", token_UserParameter);
        }
    
        public virtual int UpdateUser(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUser", emailParameter, passwordParameter);
        }
    
        public virtual int IgresarUsuario(string name_User, string email, string password)
        {
            var name_UserParameter = name_User != null ?
                new ObjectParameter("name_User", name_User) :
                new ObjectParameter("name_User", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IgresarUsuario", name_UserParameter, emailParameter, passwordParameter);
        }
    
        public virtual int IngreUser(string name_User, string email, string password)
        {
            var name_UserParameter = name_User != null ?
                new ObjectParameter("name_User", name_User) :
                new ObjectParameter("name_User", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IngreUser", name_UserParameter, emailParameter, passwordParameter);
        }
    }
}
